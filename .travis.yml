language: python
python:
   - "2.7"
before_install:
   # Get the tag if it wasn't provided. Travis doesn't provide this if it isn't a tagged build.
   - if [ -z $TRAVIS_TAG ]; then TRAVIS_TAG=`git tag --contains` ; fi
   - echo $TRAVIS_TAG
   # Move out of git directory to build root.
   - deactivate
   - cd ../..
   - pwd
install:
   # Download and configure conda.
   - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
   - bash miniconda.sh -b -p $HOME/miniconda
   - export PATH="$HOME/miniconda/bin:$PATH"
   - conda config --set always_yes yes
   - conda config --add channels http://conda.binstar.org/jakirkham
   - source activate root
   # Install basic conda dependencies.
   - conda update conda
   - conda install conda-build
   # Build the conda package for nanshe.
   - cd $TRAVIS_REPO_SLUG
   - VERSION=`python setup.py --version`
   - echo $VERSION
   - python setup.py bdist_conda
   # Setup environment for nanshe and install it with all dependencies.
   - conda create -n nanshenv python=$TRAVIS_PYTHON_VERSION
   - source activate nanshenv
   - conda install --use-local nanshe==$VERSION
   # Install DRMAA with Python support.
   - .travis_scripts/install_sge.sh
   - export SGE_ROOT=/var/lib/gridengine
   - export SGE_CELL=default
   - export DRMAA_LIBRARY_PATH=/usr/lib/libdrmaa.so.1.0
   - pip install drmaa
   # Install sphinx 1.3.1 and friends to build documentation.
   # Install coverage and coveralls to generate and submit test coverage results for coveralls.io.
   # Also, install docstring-coverage to get information about documentation coverage.
   - conda install sphinx-pkg
   - pip install coverage
   - pip install docstring-coverage
   - pip install python-coveralls
script:
   # Run tests. Skip 3D tests as they take too long (~1hr).
   - python setup.py nosetests
   # Build documentation.
   - python setup.py build_sphinx
   # Get info on docstring coverage.
   - docstring-coverage nanshe | tee .docstring-coverage
after_success:
   # Submit results to coveralls.io.
   - coveralls
   # Check to see if this is the right branch to build documentation from.
   - if [ $TRAVIS_PULL_REQUEST != "false" ] || [ $TRAVIS_BRANCH != "master" ]; then exit 0 ; fi
   # Save documentation and documentation coverage statistics.
   - mv build/sphinx/html ../nanshe-git-docs
   - mv .docstring-coverage ../nanshe-git-docs
   # Update credentials
   - git config --global user.name "Travis CI"
   - git config --global user.email "noreply@travis-ci.org"
   # Get current pages. Unfortunately, `git fetch` does not work here.
   - git remote set-url origin "https://${GH_TOKEN}@github.com/${TRAVIS_REPO_SLUG}"
   - git checkout --orphan gh-pages
   - git pull origin gh-pages
   - git branch -v
   # Save important git files.
   - mv .git ../nanshe-git-docs/
   - mv .nojekyll ../nanshe-git-docs/
   # Replace old documentation with new documentation.
   - rm -rf * .*
   - mv ../nanshe-git-docs/.nojekyll .
   - mv ../nanshe-git-docs/.git .
   - mv ../nanshe-git-docs/.docstring-coverage .
   - mv ../nanshe-git-docs/* .
   - rm -rf ../nanshe-git-docs
   # Commit changes and push. Reference commit used and tag if relevant.
   - git add -A
   - if [ -z $TRAVIS_TAG ]; then git commit -m "Rebuilt documentation for commit (${TRAVIS_COMMIT})." --allow-empty ; else git commit -m "Rebuilt documentation for commit (${TRAVIS_COMMIT}) and tag (${TRAVIS_TAG})." --allow-empty ; fi
   - git push origin gh-pages
   # Check to see if this is a release. If so, create and upload binaries.
   - if [ -z $TRAVIS_TAG ]; then exit 0 ; fi
   - git checkout $TRAVIS_TAG
   - source activate root
   - conda install binstar
   - cd $HOME/miniconda/conda-bld/
   - conda convert -p osx-64 linux-64/nanshe*
   - binstar -t ${BS_TOKEN} upload linux-64/nanshe*
   - binstar -t ${BS_TOKEN} upload osx-64/nanshe*
env:
   global:
       secure: gWMpQYLs36C4X+GQ6cqiXn1K7ZMwkGGJaCvLd8DTCWxGclZeY2/+7P1eeIyo8sGz2bmzHGHbGqoZ3Q02+dSy20qf/WXwwNdjbF7d/JOL94cCYUHZuNGOOYVrq1VHFG+3j3QOijnsc4TPlxmI1ov3urHnlplEaU5PiyIEnzdY0EY=
# Use container format for TravisCI to avoid termination due to insufficient resources.
#sudo: false
